// <auto-generated />
using System;
using Confab.Modules.Attendances.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Confab.Modules.Attendances.Infrastructure.EF.Migrations
{
    [DbContext(typeof(AttendancesDbContext))]
    [Migration("20211230173324_Agendas_Module_Attendance")]
    partial class Agendas_Module_Attendance
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("attendances")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Confab.Modules.Attendances.Domain.Entities.AttendableEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ConferenceId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("From")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("To")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AttendableEvents");
                });

            modelBuilder.Entity("Confab.Modules.Attendances.Domain.Entities.Attendance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AttendableEventId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("From")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ParticipantId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("SlotId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("To")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("Confab.Modules.Attendances.Domain.Entities.Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ConferenceId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.Property<int>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "ConferenceId")
                        .IsUnique();

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("Confab.Modules.Attendances.Domain.Entities.Slot", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AttendableEventId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ParticipantId")
                        .IsConcurrencyToken()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AttendableEventId");

                    b.ToTable("Slots");
                });

            modelBuilder.Entity("Confab.Modules.Attendances.Domain.Entities.Attendance", b =>
                {
                    b.HasOne("Confab.Modules.Attendances.Domain.Entities.Participant", null)
                        .WithMany("Attendances")
                        .HasForeignKey("ParticipantId");
                });

            modelBuilder.Entity("Confab.Modules.Attendances.Domain.Entities.Slot", b =>
                {
                    b.HasOne("Confab.Modules.Attendances.Domain.Entities.AttendableEvent", null)
                        .WithMany("Slots")
                        .HasForeignKey("AttendableEventId");
                });

            modelBuilder.Entity("Confab.Modules.Attendances.Domain.Entities.AttendableEvent", b =>
                {
                    b.Navigation("Slots");
                });

            modelBuilder.Entity("Confab.Modules.Attendances.Domain.Entities.Participant", b =>
                {
                    b.Navigation("Attendances");
                });
#pragma warning restore 612, 618
        }
    }
}
